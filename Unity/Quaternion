float _speed = 10.0f;
float _yAngle = 0.0f;
_yAngle += Time.deltaTime * 100.0f;

        // 절대 회전값 
        // transform.eulerAngles = new Vector3(0.0f, _yAngle, 0.0f);

        // +- delta 값을 특정 x,y,z축으로 회전시킨 값
        // transform.Rotate(new Vector3(0.0f, Time.deltaTime*100.0f, 0.0f));

        // transform.rotation = Quaternion.Euler(new Vector3(0.0f, _yAngle, 0.0f));
        
        // LookRotation 특정 방향을 볼수있게해줌.
        // Slerp를 통해 부자연스럽게 회전하는것을 부드럽게 회전하게끔 해줌.

        if (Input.GetKey(KeyCode.W))
        {
            
            transform.rotation = Quaternion.Slerp(transform.rotation, Quaternion.LookRotation(Vector3.forward), 0.2f);
            transform.position += (Vector3.forward * Time.deltaTime * _speed);
        }
            
        if (Input.GetKey(KeyCode.S))
        {
            
            transform.rotation = Quaternion.Slerp(transform.rotation, Quaternion.LookRotation(Vector3.back), 0.2f);
            transform.position += (Vector3.back * Time.deltaTime * _speed);
        }
             
        if (Input.GetKey(KeyCode.A))
        {
            
            transform.rotation = Quaternion.Slerp(transform.rotation, Quaternion.LookRotation(Vector3.left), 0.2f);
            transform.position += (Vector3.left * Time.deltaTime * _speed);
        }

        if (Input.GetKey(KeyCode.D))
        {
            
            transform.rotation = Quaternion.Slerp(transform.rotation, Quaternion.LookRotation(Vector3.right), 0.2f);
            transform.position += (Vector3.right * Time.deltaTime * _speed);
        }
